version: '3.4'
services:
  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/5.5/docker.html
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    deploy:
      placement:
        constraints:
          - node.labels.storage == 1
      resources:
        limits:
          memory: 1g
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      # Disable X-Pack security: https://www.elastic.co/guide/en/elasticsearch/reference/5.5/security-settings.html#general-security-settings
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.1.1
    configs:
      - source: logstash_2
        target: /usr/share/logstash/pipeline/logstash.conf
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
    command: --debug
    ports:
      - 5555:5555
      - 5550:5550
      - 12201:12201
      - 12201:12201/udp
      - 9600:9600
    secrets:
      - ca.pem
      - logstash-server-key.pem
      - logstash-server.pem
    deploy:
      resources:
        limits:
          memory: 512m
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.1.1
  kibana_auth:
    image: a5huynh/oauth2_proxy
    env_file:
      - kibana_auth.env
    command: >
      --upstream="http://kibana:5601"
      --http-address="0.0.0.0:4180"
      --redirect-url="https://kibana.itzg.me/oauth2/callback"
      --email-domain=*
      -provider=github
      -github-org=itzgAndEnenbee
  influxdb:
    image: influxdb:1.4.2
    ports:
      - 8086:8086
    environment:
      INFLUXDB_DB: metrics
    volumes:
      - influxdb_data:/var/lib/influxdb
    deploy:
      placement:
        constraints:
          - node.labels.storage == 1
      resources:
        limits:
          memory: 756m
  influxdb_tls_auth:
    image: squareup/ghostunnel
    command: >
      server
      --listen 0.0.0.0:5086
      --unsafe-target
      --target influxdb:8086
      --keystore /certs/logstash-server-bundle.pem
      --cacert /certs/ca.pem
      --allow-all
    secrets:
      # Can't use default /var/run/secrets since ghostunnel image is based on alpine
      - source: ca.pem
        target: /certs/ca.pem
      - source: logstash-server-bundle.pem
        target: /certs/logstash-server-bundle.pem
    ports:
      - 5086:5086
  chronograf:
    # NOTE: internally binds to 8888
    image: chronograf:1.3.10
    command: --influxdb-url=http://influxdb:8086
    env_file:
      - chronograf.env
    volumes:
      - chronograf_data:/var/lib/chronograf
    deploy:
      placement:
        constraints:
          - node.labels.storage == 1
      resources:
        limits:
          memory: 128m
  haproxy:
    image: itzg/haproxy-lets
    env_file:
      - haproxy.env
    volumes:
      - haproxy_certs:/certs
      - haproxy_config:/config
    ports:
      - 80:80
      - 443:443
    deploy:
      placement:
        constraints:
          - node.labels.storage == 1
      resources:
        limits:
          memory: 128m

# Volumes for persisting data, see https://docs.docker.com/engine/admin/volumes/volumes/
volumes:
  es_data:
  haproxy_certs:
  haproxy_config:
  influxdb_data:
  chronograf_data:

configs:
  logstash_2:
    file: ./logstash.conf

secrets:
  ca.pem:
    file: certs/ca.pem
  logstash-server-key.pem:
    file: certs/logstash-server-key.pem
  logstash-server.pem:
    file: certs/logstash-server.pem
  logstash-server-bundle.pem:
    file: certs/logstash-server-bundle.pem
